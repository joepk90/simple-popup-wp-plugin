{"version":3,"sources":["all.min.js"],"names":["$","$supapressCart","SupapressCart","setupAddToCartButton","setupCartEvents","jQuery","SupapressCartUtilities","this","printObject","object","map","objectNode","join","SupapressCartItemController","$button","button","cartUtilities","itemClass","item","css","js","cover","info","title","author","price","format","quantityWrapper","quantityButton","quantityInput","removeItem","itemData","id","data","image","getCartItemSelectors","getCurrentId","getCurrentItem","createElement","el","html","attr","$element","document","createItemQuantityHtml","$itemQuantity","class","$changeQuantityButtonClasses","append","data-item-quantity","type","name","value","createItemInfoHtml","$itemInfoHTML","data-item-price","createItemCardHtml","data-item-isbn","createCartItem","$itemCard","src","cartItemController","itemSelectors","cart","cartClose","cartItems","cartPrice","cartQuantity","getAddToCartButtons","$addToCartButtons","length","openCart","show","closeCart","hide","getTotal","$cartItems","each","$this","$quantity","find","val","$price","console","log","updateTotal","$totalPrice","addItemToCart","supapressCartItemController","$currentItem","removeItemFromCart","$eventTarget","hasClass","closest","remove","changeItemQuantityInputValue","$itemQuantityElement","siblings","parseInt","changeItemQuantity","click","e","preventDefault","target","closeButtonEvent","$cartClose"],"mappings":"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","file":"all.min.js","sourcesContent":["(function($) { // reference query\n    $(function() { // shorthand for onLoad()\n\n        var $supapressCart = new SupapressCart();\n        $supapressCart.setupAddToCartButton();\n        $supapressCart.setupCartEvents();\n\n        // for the header cart button\n        // $supapressCart.setupCartbutton();\n\n\n    });\n})(jQuery);\n\n\nvar SupapressCartUtilities;\n\n(function ($) { // reference query\n\n    SupapressCartUtilities = function() {\n\n        this.printObject = function(object) {\n\n            return $.map(object, function(objectNode){ return objectNode; }).join(' ');\n\n        };\n\n    };\n\n})(jQuery);\n\n\nvar SupapressCartItemController = {};\n\n(function ($) { // reference query\n\n    SupapressCartItemController = function ($button) {\n        this.button = $button;\n        this.cartUtilities = new SupapressCartUtilities();\n\n        var itemClass = {\n            item: {\n                css: 'supapress-cart-item',\n                js: 'js-supapress-cart-item'\n            },\n            cover: {\n                css: 'supapress-cart-item__the-cover',\n                js: 'js-supapress-cart-item-image'\n            },\n            info: {\n                css: 'supapress-cart-item__item-info',\n                js: ''\n            },\n            title: {\n                css: 'supapress-cart-item__the-title',\n                js: 'js-supapress-cart-item-title'\n            },\n            author: {\n                css: 'supapress-cart-item__the-author',\n                js: 'js-supapress-cart-item-author'\n            },\n            price: {\n                css: 'supapress-cart-item__the-price',\n                js: 'js-supapress-cart-item-price'\n            },\n            format: {\n                css: 'supapress-cart-item__the-format',\n                js: 'js-supapress-cart-item-format'\n            },\n            quantityWrapper: {\n                css: 'supapress-cart-item__the-quantity',\n                js: ''\n            },\n            quantityButton: {\n                css: 'supapress-cart-item__quantity-button',\n                js: 'js-supapress-cart-change-quantity'\n            },\n            quantityInput: {\n                css: 'supapress-cart-item__quantity-input',\n                js: 'js-supapress-cart-item-quantity'\n            },\n            removeItem: {\n                css: 'supapress-cart-item__remove-item',\n                js: 'js-supapress-cart-remove-item'\n            }\n\n        };\n\n        var itemData = {\n            id: $(this.button).data('supapress-cart-book-isbn'),\n            image: $(this.button).data('supapress-cart-book-image'),\n            title: $(this.button).data('supapress-cart-book-title'),\n            author: $(this.button).data('supapress-cart-book-author'),\n            price: $(this.button).data('supapress-cart-book-price'),\n            format: $(this.button).data('supapress-cart-book-format'),\n        };\n\n        this.getCartItemSelectors = function () {\n            return itemClass;\n        };\n\n        this.getCurrentId = function () {\n\n            return itemData.id;\n\n        };\n\n        this.getCurrentItem = function () {\n\n            return $(\".\" + this.cartUtilities.printObject(itemClass.item) + \"[data-item-isbn=\" + itemData.id + \"]\");\n\n        };\n\n        this.createElement = function(el, html, attr) {\n\n            var $element = $(document.createElement(el));\n\n            if (html !== '') {\n                $element.html(html);\n            }\n\n            if (typeof attr !== 'undefined') {\n                $element.attr(attr);\n            }\n\n            return $element;\n\n        };\n\n        this.createItemQuantityHtml = function () {\n\n            // Create Item Quantity Container\n            var $itemQuantity = this.createElement('div', '', {\n                class: this.cartUtilities.printObject(itemClass.quantityWrapper)\n            });\n\n            var $changeQuantityButtonClasses = this.cartUtilities.printObject(itemClass.quantityButton);\n\n            return $itemQuantity.append(\n                this.createElement('button', '-', {\n                    'data-item-quantity': -1,\n                    class: $changeQuantityButtonClasses\n                }),\n                this.createElement('input', '', {\n                    type: 'number',\n                    name: 'item-quantity',\n                    value: 1,\n                    class: this.cartUtilities.printObject(itemClass.quantityInput)\n                }),\n                this.createElement('button', '+', {\n                    'data-item-quantity': 1,\n                    class: $changeQuantityButtonClasses\n                })\n            );\n\n        };\n\n\n        this.createItemInfoHtml = function () {\n\n            var $itemInfoHTML = this.createElement('div', '', {\n                class: this.cartUtilities.printObject(itemClass.info)\n            });\n\n            return $itemInfoHTML.append(\n                this.createElement('p', itemData.title, {\n                    class: this.cartUtilities.printObject(itemClass.title)\n                }),\n                this.createElement('p', itemData.author, {\n                    class: this.cartUtilities.printObject(itemClass.author)\n                }),\n                this.createElement('p', itemData.price, {\n                    class: this.cartUtilities.printObject(itemClass.price),\n                    'data-item-price': itemData.price\n                }),\n                this.createElement('p', itemData.format, {\n                    class: this.cartUtilities.printObject(itemClass.format)\n                }),\n                this.createItemQuantityHtml(),\n                this.createElement('button', 'X', {\n                    class: this.cartUtilities.printObject(itemClass.removeItem)\n                })\n            );\n\n        };\n\n        this.createItemCardHtml = function () {\n\n            return  this.createElement('li', '', {\n                class: this.cartUtilities.printObject(itemClass.item),\n                'data-item-isbn': this.getCurrentId()\n            });\n\n        };\n\n        this.createCartItem = function () {\n\n            var $itemCard = this.createItemCardHtml();\n\n            return $itemCard.append(\n                this.createElement('img', '', {\n                    class: this.cartUtilities.printObject(itemClass.cover),\n                    'src': itemData.image\n                }),\n                this.createItemInfoHtml()\n            );\n\n        };\n\n    };\n\n})(jQuery);\n\n\nvar SupapressCart = {};\n\n(function ($) { // reference query\n\n    SupapressCart = function () {\n\n        // this.cartUtilities = new SupapressCartUtilities();\n        this.cartItemController = new SupapressCartItemController();\n        this.itemSelectors = this.cartItemController.getCartItemSelectors();\n        this.cart = $('.js-supapress-cart');\n        this.cartClose = $('.js-supapress-cart-close, .js-supapress-cart-continue');\n        this.cartItems = $('.js-supapress-cart-items');\n        this.cartPrice = 0;\n        this.cartQuantity = 0;\n\n        this.getAddToCartButtons = function () {\n\n            var $addToCartButtons = $('.js-supapress-cart-add-to-cart-button');\n\n            if ($addToCartButtons.length === 0) {\n                return null;\n            }\n\n            return $addToCartButtons;\n\n        };\n\n        this.openCart = function () {\n\n            // TODO change to classes as they are more controllable\n            if (this.cart.css('display') === 'block') {\n                return;\n            }\n\n            this.cart.show();\n\n        };\n\n        this.closeCart = function () {\n\n            // TODO change to classes as they are more controllable\n            if (this.cart.css('display') === 'none') {\n                return;\n            }\n\n            this.cart.hide();\n\n        };\n\n        this.getTotal = function () {\n\n            var $cartItems = $('.js-supapress-cart-item');\n\n            if ($cartItems.length === 0) {\n                return null;\n            }\n\n            // var $supapressCart = $(this);\n\n            $cartItems.each(function () {\n\n                var $this = $(this);\n\n                var $quantity = $this.find('.js-supapress-cart-item-quantity').val();\n                var $price = $this.find('.js-supapress-cart-item-price').data('item-price');\n\n                console.log('$quantity test: ', $quantity);\n                console.log('$price: ', $price);\n                console.log('test');\n                // console.log('test2');\n\n                // TODO PRICE IS CURRENT A STRING WITH A $ SIGN!!!\n                var $itemTotal = $quantity * $price;\n\n\n            });\n\n            // TODO return the correct price\n            return 20.00;\n\n        };\n\n        this.updateTotal = function () {\n\n            var $totalPrice = this.getTotal();\n\n            $('.js-supapress-cart-price').html($totalPrice);\n\n        };\n\n        this.addItemToCart = function ($button) {\n\n            var supapressCartItemController = new SupapressCartItemController($button);\n\n            // TODO LOGIC TO WRITE\n            //  check if item already exists\n            //  if item exists update quantity\n            //  else create item and append it to form\n\n            var $currentItem = supapressCartItemController.getCurrentItem();\n\n            if ($currentItem.length === 0) {\n\n                // append new item to cart\n                $(this.cartItems).append($, $(supapressCartItemController.createCartItem()));\n                this.updateTotal();\n\n            }\n\n            // this.updateTotal();\n            // this.upddateShippingEstimate();\n\n        };\n\n        this.removeItemFromCart = function ($eventTarget) {\n\n            if ($eventTarget.hasClass('js-supapress-cart-remove-item')) {\n\n                $eventTarget.closest('.js-supapress-cart-item').remove();\n\n            }\n\n        };\n\n\n        this.changeItemQuantityInputValue = function ($eventTarget) {\n\n            var $itemQuantityElement = $($eventTarget).siblings('.js-supapress-cart-item-quantity');\n\n            // if item has 1 or less and user is attempting to remove an item, stop the script\n            if ($itemQuantityElement.val() <= 1 && $eventTarget.data('item-quantity') === -1) {\n\n                // TODO setup logic to deactivate the decrease quantity button\n                return;\n            }\n\n            $itemQuantityElement.val(parseInt($itemQuantityElement.val()) + $eventTarget.data('item-quantity'));\n\n        };\n\n        this.changeItemQuantity = function ($eventTarget) {\n\n\n            if ($eventTarget.hasClass('js-supapress-cart-change-quantity')) {\n\n                this.changeItemQuantityInputValue($eventTarget);\n\n                // TODO update Cookie\n                // TODO update Total Price\n                this.updateTotal();\n\n            }\n\n        };\n\n        this.setupAddToCartButton = function () {\n\n            var $supapressCart = this;\n\n            var $addToCartButtons = this.getAddToCartButtons();\n\n            $($addToCartButtons).each(function () {\n\n                var $this = $(this);\n\n                $this.click(function (e) {\n\n                    e.preventDefault();\n\n                    $supapressCart.openCart();\n\n                    $supapressCart.addItemToCart(e.target);\n\n                });\n            });\n\n\n        };\n\n        this.closeButtonEvent = function () {\n\n            var $supapressCart = this;\n\n            var $cartClose = this.cartClose;\n\n            $($cartClose).each(function () {\n\n                var $this = $(this);\n\n                $this.click(function (e) {\n\n                    e.preventDefault();\n\n                    $supapressCart.closeCart();\n\n                });\n            });\n\n\n        };\n\n        this.setupCartEvents = function () {\n\n            this.closeButtonEvent();\n\n            var $supapressCart = this;\n\n            $('.js-supapress-cart-items').click(function (e) {\n\n                e.preventDefault();\n\n                var $eventTarget = $(e.target);\n\n                $supapressCart.removeItemFromCart($eventTarget);\n                $supapressCart.changeItemQuantity($eventTarget);\n\n            });\n\n        };\n    };\n\n})(jQuery);\n\n"]}